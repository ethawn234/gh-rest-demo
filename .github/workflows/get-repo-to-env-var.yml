name: get_repo-mapping-var_to_env-var_to_var

on: 
  workflow_dispatch:
    inputs:
      user-name:
        description: "which user?"
        required: false
        type: string
        default: "bob"
jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      user: ${{ steps.get-repo.outputs.user }}
    steps:
      - name: mock obj val prep
        id: get-repo
        run: |
          user=(echo '${{ inputs.user-name }}')
          echo "user=$user" >> "$GITHUB_OUTPUT"
  get_map:
    runs-on: ubuntu-latest
    outputs:
      myVarEnv: ${{ steps.get-my-var-by-env.outputs.myVarEnv }}
    needs: prep
    steps:
      - name: Get en var
        id: get-my-var-by-env
        run: |
          person=$(echo '${{ vars.MAP }}' | jq -r --arg name "${{ needs.prep.outputs.user }}" '.[$name]')
          echo "myVarEnv=$person" >> "$GITHUB_OUTPUT"
  get_my_var:
    runs-on: ubuntu-latest
    needs: get_map
    environment: ${{ needs.get_map.outputs.myVarEnv }}
    steps:
      - name: Get myVar
        run: |
          echo "user=${{ needs.prep.outputs.user }}"
          echo "myVarEnv=${{ needs.get_map.outputs.myVarEnv }}"
          myVarVal=$(echo '${{ vars.MY_VAR }}' | jq -r '.var1')
          echo myVarVal="$myVarVal"    
